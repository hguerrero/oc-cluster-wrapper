#!/bin/bash

function gitlab.describe {
  echo "Installs a gitlab registry in a ci project. Use --pull flag to pull images down before installing the software"
}

function gitlab.help {
   echo ""
}

# Added the ability to prepull images if provided flag
# 
#
function gitlab.install {
  status &> /dev/null  || error_exit "There's no cluster running"
  requiresInternet

  # Prepull the images
  if [ "$1" == "--pull" ]
  then
    docker pull gitlab/gitlab-ce:9.1.1-ce.0
    docker pull redis:3.2.3-alpine
    docker pull centos/postgresql-94-centos7:latest
  fi

  ${OC_BINARY} project ci > /dev/null 2>&1
  if [[ $? == 1 ]]; then
    # project ci does not exist
    ${OC_BINARY} adm new-project ci --as=system:admin
  fi

  ${OC_BINARY} adm policy add-scc-to-user anyuid system:serviceaccount:ci:gitlab-ce-user --as=system:admin
  create-volume pv01
  create-volume pv02
  create-volume pv03
  create-volume pv04
  ${OC_BINARY} create -f https://gitlab.com/gitlab-org/omnibus-gitlab/raw/master/docker/openshift-template.json -n ci --as=system:admin
  ${OC_BINARY} new-app --template=gitlab-ce -p GITLAB_ROOT_PASSWORD=password -p APPLICATION_HOSTNAME=gitlab.$(domainSuffix) -n ci --as=system:admin
  ${OC_BINARY} adm policy add-role-to-user admin $(${OC_BINARY} whoami) --as=system:admin -n ci
  echo "Project ci has been created and shared with you. It has a gitlab instance available at http://gitlab.$(domainSuffix)"
}

function gitlab.uninstall {
    for resource in is/gitlab-ce is/gitlab-ce-redis \
      dc/gitlab-ce dc/gitlab-ce-redis dc/gitlab-ce-postgresql \
      svc/gitlab-ce svc/gitlab-ce-redis svc/gitlab-ce-postgresql \
      pvc/gitlab-ce-redis-data pvc/gitlab-ce-etc pvc/gitlab-ce-data pvc/gitlab-ce-postgresql \
      route/gitlab-ce \
      pv/pv01 pv/pv02 pv/pv03 pv/pv04 \
      template/gitlab-ce;
    do
      ${OC_BINARY} delete $resource  --as=system:admin -n ci
    done
}

gitlab.describe
